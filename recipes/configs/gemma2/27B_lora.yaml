# Config for multi-device LoRA finetuning in lora_finetune_distributed.py
# using a gemma2 27B model
#
# This config assumes that you've run the following command before launching
# this run:
#   tune download google/gemma2-27b --hf-token <HF_TOKEN> --output-dir /tmp/gemma2-27b --ignore-patterns "gemma2-27b.gguf"
#
# To launch on 4 devices, run the following command from root:
#   tune run --nnodes 1 --nproc_per_node 4 lora_finetune_distributed --config gemma2/27B_lora
#
# You can add specific overrides through the command line. For example
# to override the checkpointer directory while launching training
# you can run:
#   tune run --nnodes 1 --nproc_per_node 4 lora_finetune_distributed --config gemma2/27B_lora checkpointer.checkpoint_dir=<YOUR_CHECKPOINT_DIR>
#
# This config works only when the model is being fine-tuned on 2+ GPUs.


# Tokenizer
tokenizer:
  _component_: torchtune.models.gemma2.gemma_tokenizer
  path: /tmp/gemma2-27b/tokenizer.model

# Dataset
dataset:
  _component_: torchtune.datasets.alpaca_dataset
seed: null
shuffle: True

# Model Arguments
model:
  _component_: torchtune.models.gemma2.lora_gemma2_27b
  lora_attn_modules: ['q_proj', 'k_proj', 'v_proj']
  apply_lora_to_mlp: True
  lora_rank: 64
  lora_alpha: 16

checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: /tmp/gemma2/
  checkpoint_files: [
    model-00001-of-00024.safetensors,
    model-00002-of-00024.safetensors,
    model-00003-of-00024.safetensors,
    model-00004-of-00024.safetensors,
    model-00005-of-00024.safetensors,
    model-00006-of-00024.safetensors,
    model-00007-of-00024.safetensors,
    model-00008-of-00024.safetensors,
    model-00009-of-00024.safetensors,
    model-00010-of-00024.safetensors,
    model-00011-of-00024.safetensors,
    model-00012-of-00024.safetensors,
    model-00013-of-00024.safetensors,
    model-00014-of-00024.safetensors,
    model-00015-of-00024.safetensors,
    model-00016-of-00024.safetensors,
    model-00017-of-00024.safetensors,
    model-00018-of-00024.safetensors,
    model-00019-of-00024.safetensors,
    model-00020-of-00024.safetensors,
    model-00021-of-00024.safetensors,
    model-00022-of-00024.safetensors,
    model-00023-of-00024.safetensors,
    model-00024-of-00024.safetensors
]
  recipe_checkpoint: null
  output_dir: /tmp/gemma2
  model_type: GEMMA2
resume_from_checkpoint: False

optimizer:
  _component_: torch.optim.AdamW
  lr: 2e-5

lr_scheduler:
  _component_: torchtune.modules.get_cosine_schedule_with_warmup
  num_warmup_steps: 100

loss:
  _component_: torch.nn.CrossEntropyLoss

# Fine-tuning arguments
batch_size: 4
epochs: 3
max_steps_per_epoch: null
gradient_accumulation_steps: 1

# Training env
device: cuda

# Memory management
enable_activation_checkpointing: True

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
output_dir: /tmp/alpaca-gemma2-lora
log_every_n_steps: 1
log_peak_memory_stats: False
